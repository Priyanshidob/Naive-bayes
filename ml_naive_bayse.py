# -*- coding: utf-8 -*-
"""Ml_Naive_bayse

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10NsCwEjGjIk-G8duHVFTAT9BfLiPqFrZ

a. Load the data set
"""

import pandas as pd

df=pd.read_csv('Iris.csv')

df

"""data preprocessing

"""

from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
df['Species']=le.fit_transform(df['Species'])

df

"""b. Split the data set (70:30) to train and test sets


"""

X = df.iloc[:, :-1].values
y = df.iloc[:, -1].values

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=0)

"""c. Train a Decision Tree(CART)using train set


"""

from sklearn.naive_bayes import GaussianNB
classifier=GaussianNB()
classifier.fit(X_train,y_train)

"""d. Test the model using test set.

"""

import numpy as np
y_pred=classifier.predict(X_test)
print(np.concatenate((y_pred.reshape(len(y_pred),1),y_test.reshape(len(y_test),1)),1))

"""e. Find accuracy and confusion Matrix

"""

from sklearn.metrics import confusion_matrix, accuracy_score,precision_score, recall_score
cm=confusion_matrix(y_test,y_pred)
cm

accuracy=accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy}")

"""f. Create a Comparison table for all 3 algorithms wherein you have the accuracy, precision and recall"""

precision=precision_score(y_test, y_pred,average='weighted')
print(f"Precision: {precision}")

recall=recall_score(y_test, y_pred,average='weighted')
print(f"Recall: {recall}")